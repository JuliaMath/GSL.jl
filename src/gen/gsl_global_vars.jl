#
# This code is auto generated from the GSL headers, do not edit!
#

const gsl_movstat_accum_mad = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_max = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_mean = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_median = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_min = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_minmax = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_sd = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_Sn = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_sum = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_Qn = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_qqr = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_userfunc = Ref{gsl_movstat_accum}()
const gsl_movstat_accum_variance = Ref{gsl_movstat_accum}()
const gsl_integration_fixed_legendre = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_chebyshev = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_gegenbauer = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_jacobi = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_laguerre = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_hermite = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_exponential = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_rational = Ref{gsl_integration_fixed_type}()
const gsl_integration_fixed_chebyshev2 = Ref{gsl_integration_fixed_type}()
const gsl_interp_linear = Ref{gsl_interp_type}()
const gsl_interp_polynomial = Ref{gsl_interp_type}()
const gsl_interp_cspline = Ref{gsl_interp_type}()
const gsl_interp_cspline_periodic = Ref{gsl_interp_type}()
const gsl_interp_akima = Ref{gsl_interp_type}()
const gsl_interp_akima_periodic = Ref{gsl_interp_type}()
const gsl_interp_steffen = Ref{gsl_interp_type}()
const gsl_interp2d_bilinear = Ref{gsl_interp2d_type}()
const gsl_interp2d_bicubic = Ref{gsl_interp2d_type}()
const gsl_min_fminimizer_goldensection = Ref{gsl_min_fminimizer_type}()
const gsl_min_fminimizer_brent = Ref{gsl_min_fminimizer_type}()
const gsl_min_fminimizer_quad_golden = Ref{gsl_min_fminimizer_type}()
const gsl_multifit_robust_default = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_bisquare = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_cauchy = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_fair = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_huber = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_ols = Ref{gsl_multifit_robust_type}()
const gsl_multifit_robust_welsch = Ref{gsl_multifit_robust_type}()
const gsl_multifit_fdfsolver_lmsder = Ref{gsl_multifit_fdfsolver_type}()
const gsl_multifit_fdfsolver_lmder = Ref{gsl_multifit_fdfsolver_type}()
const gsl_multifit_fdfsolver_lmniel = Ref{gsl_multifit_fdfsolver_type}()
const gsl_multifit_nlinear_trust = Ref{gsl_multifit_nlinear_type}()
const gsl_multifit_nlinear_trs_lm = Ref{gsl_multifit_nlinear_trs}()
const gsl_multifit_nlinear_trs_lmaccel = Ref{gsl_multifit_nlinear_trs}()
const gsl_multifit_nlinear_trs_dogleg = Ref{gsl_multifit_nlinear_trs}()
const gsl_multifit_nlinear_trs_ddogleg = Ref{gsl_multifit_nlinear_trs}()
const gsl_multifit_nlinear_trs_subspace2D = Ref{gsl_multifit_nlinear_trs}()
const gsl_multifit_nlinear_scale_levenberg = Ref{gsl_multifit_nlinear_scale}()
const gsl_multifit_nlinear_scale_marquardt = Ref{gsl_multifit_nlinear_scale}()
const gsl_multifit_nlinear_scale_more = Ref{gsl_multifit_nlinear_scale}()
const gsl_multifit_nlinear_solver_cholesky = Ref{gsl_multifit_nlinear_solver}()
const gsl_multifit_nlinear_solver_mcholesky = Ref{gsl_multifit_nlinear_solver}()
const gsl_multifit_nlinear_solver_qr = Ref{gsl_multifit_nlinear_solver}()
const gsl_multifit_nlinear_solver_svd = Ref{gsl_multifit_nlinear_solver}()
const gsl_multilarge_linear_normal = Ref{gsl_multilarge_linear_type}()
const gsl_multilarge_linear_tsqr = Ref{gsl_multilarge_linear_type}()
const gsl_multilarge_nlinear_trust = Ref{gsl_multilarge_nlinear_type}()
const gsl_multilarge_nlinear_trs_lm = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_trs_lmaccel = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_trs_dogleg = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_trs_ddogleg = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_trs_subspace2D = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_trs_cgst = Ref{gsl_multilarge_nlinear_trs}()
const gsl_multilarge_nlinear_scale_levenberg = Ref{gsl_multilarge_nlinear_scale}()
const gsl_multilarge_nlinear_scale_marquardt = Ref{gsl_multilarge_nlinear_scale}()
const gsl_multilarge_nlinear_scale_more = Ref{gsl_multilarge_nlinear_scale}()
const gsl_multilarge_nlinear_solver_cholesky = Ref{gsl_multilarge_nlinear_solver}()
const gsl_multilarge_nlinear_solver_mcholesky = Ref{gsl_multilarge_nlinear_solver}()
const gsl_multilarge_nlinear_solver_none = Ref{gsl_multilarge_nlinear_solver}()
const gsl_multimin_fdfminimizer_steepest_descent = Ref{gsl_multimin_fdfminimizer_type}()
const gsl_multimin_fdfminimizer_conjugate_pr = Ref{gsl_multimin_fdfminimizer_type}()
const gsl_multimin_fdfminimizer_conjugate_fr = Ref{gsl_multimin_fdfminimizer_type}()
const gsl_multimin_fdfminimizer_vector_bfgs = Ref{gsl_multimin_fdfminimizer_type}()
const gsl_multimin_fdfminimizer_vector_bfgs2 = Ref{gsl_multimin_fdfminimizer_type}()
const gsl_multimin_fminimizer_nmsimplex = Ref{gsl_multimin_fminimizer_type}()
const gsl_multimin_fminimizer_nmsimplex2 = Ref{gsl_multimin_fminimizer_type}()
const gsl_multimin_fminimizer_nmsimplex2rand = Ref{gsl_multimin_fminimizer_type}()
const gsl_multiroot_fsolver_dnewton = Ref{gsl_multiroot_fsolver_type}()
const gsl_multiroot_fsolver_broyden = Ref{gsl_multiroot_fsolver_type}()
const gsl_multiroot_fsolver_hybrid = Ref{gsl_multiroot_fsolver_type}()
const gsl_multiroot_fsolver_hybrids = Ref{gsl_multiroot_fsolver_type}()
const gsl_multiroot_fdfsolver_newton = Ref{gsl_multiroot_fdfsolver_type}()
const gsl_multiroot_fdfsolver_gnewton = Ref{gsl_multiroot_fdfsolver_type}()
const gsl_multiroot_fdfsolver_hybridj = Ref{gsl_multiroot_fdfsolver_type}()
const gsl_multiroot_fdfsolver_hybridsj = Ref{gsl_multiroot_fdfsolver_type}()
const gsl_odeiv_step_rk2 = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rk4 = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rkf45 = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rkck = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rk8pd = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rk2imp = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rk2simp = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_rk4imp = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_bsimp = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_gear1 = Ref{gsl_odeiv_step_type}()
const gsl_odeiv_step_gear2 = Ref{gsl_odeiv_step_type}()
const gsl_odeiv2_step_rk2 = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rk4 = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rkf45 = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rkck = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rk8pd = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rk2imp = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rk4imp = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_bsimp = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_rk1imp = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_msadams = Ref{gsl_odeiv2_step_type}()
const gsl_odeiv2_step_msbdf = Ref{gsl_odeiv2_step_type}()
const gsl_qrng_niederreiter_2 = Ref{gsl_qrng_type}()
const gsl_qrng_sobol = Ref{gsl_qrng_type}()
const gsl_qrng_halton = Ref{gsl_qrng_type}()
const gsl_qrng_reversehalton = Ref{gsl_qrng_type}()
const gsl_rng_borosh13 = Ref{gsl_rng_type}()
const gsl_rng_coveyou = Ref{gsl_rng_type}()
const gsl_rng_cmrg = Ref{gsl_rng_type}()
const gsl_rng_fishman18 = Ref{gsl_rng_type}()
const gsl_rng_fishman20 = Ref{gsl_rng_type}()
const gsl_rng_fishman2x = Ref{gsl_rng_type}()
const gsl_rng_gfsr4 = Ref{gsl_rng_type}()
const gsl_rng_knuthran = Ref{gsl_rng_type}()
const gsl_rng_knuthran2 = Ref{gsl_rng_type}()
const gsl_rng_knuthran2002 = Ref{gsl_rng_type}()
const gsl_rng_lecuyer21 = Ref{gsl_rng_type}()
const gsl_rng_minstd = Ref{gsl_rng_type}()
const gsl_rng_mrg = Ref{gsl_rng_type}()
const gsl_rng_mt19937 = Ref{gsl_rng_type}()
const gsl_rng_mt19937_1999 = Ref{gsl_rng_type}()
const gsl_rng_mt19937_1998 = Ref{gsl_rng_type}()
const gsl_rng_r250 = Ref{gsl_rng_type}()
const gsl_rng_ran0 = Ref{gsl_rng_type}()
const gsl_rng_ran1 = Ref{gsl_rng_type}()
const gsl_rng_ran2 = Ref{gsl_rng_type}()
const gsl_rng_ran3 = Ref{gsl_rng_type}()
const gsl_rng_rand = Ref{gsl_rng_type}()
const gsl_rng_rand48 = Ref{gsl_rng_type}()
const gsl_rng_random128_bsd = Ref{gsl_rng_type}()
const gsl_rng_random128_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random128_libc5 = Ref{gsl_rng_type}()
const gsl_rng_random256_bsd = Ref{gsl_rng_type}()
const gsl_rng_random256_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random256_libc5 = Ref{gsl_rng_type}()
const gsl_rng_random32_bsd = Ref{gsl_rng_type}()
const gsl_rng_random32_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random32_libc5 = Ref{gsl_rng_type}()
const gsl_rng_random64_bsd = Ref{gsl_rng_type}()
const gsl_rng_random64_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random64_libc5 = Ref{gsl_rng_type}()
const gsl_rng_random8_bsd = Ref{gsl_rng_type}()
const gsl_rng_random8_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random8_libc5 = Ref{gsl_rng_type}()
const gsl_rng_random_bsd = Ref{gsl_rng_type}()
const gsl_rng_random_glibc2 = Ref{gsl_rng_type}()
const gsl_rng_random_libc5 = Ref{gsl_rng_type}()
const gsl_rng_randu = Ref{gsl_rng_type}()
const gsl_rng_ranf = Ref{gsl_rng_type}()
const gsl_rng_ranlux = Ref{gsl_rng_type}()
const gsl_rng_ranlux389 = Ref{gsl_rng_type}()
const gsl_rng_ranlxd1 = Ref{gsl_rng_type}()
const gsl_rng_ranlxd2 = Ref{gsl_rng_type}()
const gsl_rng_ranlxs0 = Ref{gsl_rng_type}()
const gsl_rng_ranlxs1 = Ref{gsl_rng_type}()
const gsl_rng_ranlxs2 = Ref{gsl_rng_type}()
const gsl_rng_ranmar = Ref{gsl_rng_type}()
const gsl_rng_slatec = Ref{gsl_rng_type}()
const gsl_rng_taus = Ref{gsl_rng_type}()
const gsl_rng_taus2 = Ref{gsl_rng_type}()
const gsl_rng_taus113 = Ref{gsl_rng_type}()
const gsl_rng_transputer = Ref{gsl_rng_type}()
const gsl_rng_tt800 = Ref{gsl_rng_type}()
const gsl_rng_uni = Ref{gsl_rng_type}()
const gsl_rng_uni32 = Ref{gsl_rng_type}()
const gsl_rng_vax = Ref{gsl_rng_type}()
const gsl_rng_waterman14 = Ref{gsl_rng_type}()
const gsl_rng_zuf = Ref{gsl_rng_type}()
const gsl_rng_default = Ref{gsl_rng_type}()
const gsl_root_fsolver_bisection = Ref{gsl_root_fsolver_type}()
const gsl_root_fsolver_brent = Ref{gsl_root_fsolver_type}()
const gsl_root_fsolver_falsepos = Ref{gsl_root_fsolver_type}()
const gsl_root_fdfsolver_newton = Ref{gsl_root_fdfsolver_type}()
const gsl_root_fdfsolver_secant = Ref{gsl_root_fdfsolver_type}()
const gsl_root_fdfsolver_steffenson = Ref{gsl_root_fdfsolver_type}()
const gsl_version = Ref{Cchar}()
const gsl_wavelet_daubechies = Ref{gsl_wavelet_type}()
const gsl_wavelet_daubechies_centered = Ref{gsl_wavelet_type}()
const gsl_wavelet_haar = Ref{gsl_wavelet_type}()
const gsl_wavelet_haar_centered = Ref{gsl_wavelet_type}()
const gsl_wavelet_bspline = Ref{gsl_wavelet_type}()
const gsl_wavelet_bspline_centered = Ref{gsl_wavelet_type}()


macro gload_pp(n, t)
    return :( unsafe_load(unsafe_load(cglobal(($n, libgsl), Ptr{$t}))) )
end

function init_global_vars()
    gsl_movstat_accum_mad[] =  @gload_pp(:gsl_movstat_accum_mad, gsl_movstat_accum) 
    gsl_movstat_accum_max[] =  @gload_pp(:gsl_movstat_accum_max, gsl_movstat_accum) 
    gsl_movstat_accum_mean[] =  @gload_pp(:gsl_movstat_accum_mean, gsl_movstat_accum) 
    gsl_movstat_accum_median[] =  @gload_pp(:gsl_movstat_accum_median, gsl_movstat_accum) 
    gsl_movstat_accum_min[] =  @gload_pp(:gsl_movstat_accum_min, gsl_movstat_accum) 
    gsl_movstat_accum_minmax[] =  @gload_pp(:gsl_movstat_accum_minmax, gsl_movstat_accum) 
    gsl_movstat_accum_sd[] =  @gload_pp(:gsl_movstat_accum_sd, gsl_movstat_accum) 
    gsl_movstat_accum_Sn[] =  @gload_pp(:gsl_movstat_accum_Sn, gsl_movstat_accum) 
    gsl_movstat_accum_sum[] =  @gload_pp(:gsl_movstat_accum_sum, gsl_movstat_accum) 
    gsl_movstat_accum_Qn[] =  @gload_pp(:gsl_movstat_accum_Qn, gsl_movstat_accum) 
    gsl_movstat_accum_qqr[] =  @gload_pp(:gsl_movstat_accum_qqr, gsl_movstat_accum) 
    gsl_movstat_accum_userfunc[] =  @gload_pp(:gsl_movstat_accum_userfunc, gsl_movstat_accum) 
    gsl_movstat_accum_variance[] =  @gload_pp(:gsl_movstat_accum_variance, gsl_movstat_accum) 
    gsl_integration_fixed_legendre[] =  @gload_pp(:gsl_integration_fixed_legendre, gsl_integration_fixed_type) 
    gsl_integration_fixed_chebyshev[] =  @gload_pp(:gsl_integration_fixed_chebyshev, gsl_integration_fixed_type) 
    gsl_integration_fixed_gegenbauer[] =  @gload_pp(:gsl_integration_fixed_gegenbauer, gsl_integration_fixed_type) 
    gsl_integration_fixed_jacobi[] =  @gload_pp(:gsl_integration_fixed_jacobi, gsl_integration_fixed_type) 
    gsl_integration_fixed_laguerre[] =  @gload_pp(:gsl_integration_fixed_laguerre, gsl_integration_fixed_type) 
    gsl_integration_fixed_hermite[] =  @gload_pp(:gsl_integration_fixed_hermite, gsl_integration_fixed_type) 
    gsl_integration_fixed_exponential[] =  @gload_pp(:gsl_integration_fixed_exponential, gsl_integration_fixed_type) 
    gsl_integration_fixed_rational[] =  @gload_pp(:gsl_integration_fixed_rational, gsl_integration_fixed_type) 
    gsl_integration_fixed_chebyshev2[] =  @gload_pp(:gsl_integration_fixed_chebyshev2, gsl_integration_fixed_type) 
    gsl_interp_linear[] =  @gload_pp(:gsl_interp_linear, gsl_interp_type) 
    gsl_interp_polynomial[] =  @gload_pp(:gsl_interp_polynomial, gsl_interp_type) 
    gsl_interp_cspline[] =  @gload_pp(:gsl_interp_cspline, gsl_interp_type) 
    gsl_interp_cspline_periodic[] =  @gload_pp(:gsl_interp_cspline_periodic, gsl_interp_type) 
    gsl_interp_akima[] =  @gload_pp(:gsl_interp_akima, gsl_interp_type) 
    gsl_interp_akima_periodic[] =  @gload_pp(:gsl_interp_akima_periodic, gsl_interp_type) 
    gsl_interp_steffen[] =  @gload_pp(:gsl_interp_steffen, gsl_interp_type) 
    gsl_interp2d_bilinear[] =  @gload_pp(:gsl_interp2d_bilinear, gsl_interp2d_type) 
    gsl_interp2d_bicubic[] =  @gload_pp(:gsl_interp2d_bicubic, gsl_interp2d_type) 
    gsl_min_fminimizer_goldensection[] =  @gload_pp(:gsl_min_fminimizer_goldensection, gsl_min_fminimizer_type) 
    gsl_min_fminimizer_brent[] =  @gload_pp(:gsl_min_fminimizer_brent, gsl_min_fminimizer_type) 
    gsl_min_fminimizer_quad_golden[] =  @gload_pp(:gsl_min_fminimizer_quad_golden, gsl_min_fminimizer_type) 
    gsl_multifit_robust_default[] =  @gload_pp(:gsl_multifit_robust_default, gsl_multifit_robust_type) 
    gsl_multifit_robust_bisquare[] =  @gload_pp(:gsl_multifit_robust_bisquare, gsl_multifit_robust_type) 
    gsl_multifit_robust_cauchy[] =  @gload_pp(:gsl_multifit_robust_cauchy, gsl_multifit_robust_type) 
    gsl_multifit_robust_fair[] =  @gload_pp(:gsl_multifit_robust_fair, gsl_multifit_robust_type) 
    gsl_multifit_robust_huber[] =  @gload_pp(:gsl_multifit_robust_huber, gsl_multifit_robust_type) 
    gsl_multifit_robust_ols[] =  @gload_pp(:gsl_multifit_robust_ols, gsl_multifit_robust_type) 
    gsl_multifit_robust_welsch[] =  @gload_pp(:gsl_multifit_robust_welsch, gsl_multifit_robust_type) 
    gsl_multifit_fdfsolver_lmsder[] =  @gload_pp(:gsl_multifit_fdfsolver_lmsder, gsl_multifit_fdfsolver_type) 
    gsl_multifit_fdfsolver_lmder[] =  @gload_pp(:gsl_multifit_fdfsolver_lmder, gsl_multifit_fdfsolver_type) 
    gsl_multifit_fdfsolver_lmniel[] =  @gload_pp(:gsl_multifit_fdfsolver_lmniel, gsl_multifit_fdfsolver_type) 
    gsl_multifit_nlinear_trust[] =  @gload_pp(:gsl_multifit_nlinear_trust, gsl_multifit_nlinear_type) 
    gsl_multifit_nlinear_trs_lm[] =  @gload_pp(:gsl_multifit_nlinear_trs_lm, gsl_multifit_nlinear_trs) 
    gsl_multifit_nlinear_trs_lmaccel[] =  @gload_pp(:gsl_multifit_nlinear_trs_lmaccel, gsl_multifit_nlinear_trs) 
    gsl_multifit_nlinear_trs_dogleg[] =  @gload_pp(:gsl_multifit_nlinear_trs_dogleg, gsl_multifit_nlinear_trs) 
    gsl_multifit_nlinear_trs_ddogleg[] =  @gload_pp(:gsl_multifit_nlinear_trs_ddogleg, gsl_multifit_nlinear_trs) 
    gsl_multifit_nlinear_trs_subspace2D[] =  @gload_pp(:gsl_multifit_nlinear_trs_subspace2D, gsl_multifit_nlinear_trs) 
    gsl_multifit_nlinear_scale_levenberg[] =  @gload_pp(:gsl_multifit_nlinear_scale_levenberg, gsl_multifit_nlinear_scale) 
    gsl_multifit_nlinear_scale_marquardt[] =  @gload_pp(:gsl_multifit_nlinear_scale_marquardt, gsl_multifit_nlinear_scale) 
    gsl_multifit_nlinear_scale_more[] =  @gload_pp(:gsl_multifit_nlinear_scale_more, gsl_multifit_nlinear_scale) 
    gsl_multifit_nlinear_solver_cholesky[] =  @gload_pp(:gsl_multifit_nlinear_solver_cholesky, gsl_multifit_nlinear_solver) 
    gsl_multifit_nlinear_solver_mcholesky[] =  @gload_pp(:gsl_multifit_nlinear_solver_mcholesky, gsl_multifit_nlinear_solver) 
    gsl_multifit_nlinear_solver_qr[] =  @gload_pp(:gsl_multifit_nlinear_solver_qr, gsl_multifit_nlinear_solver) 
    gsl_multifit_nlinear_solver_svd[] =  @gload_pp(:gsl_multifit_nlinear_solver_svd, gsl_multifit_nlinear_solver) 
    gsl_multilarge_linear_normal[] =  @gload_pp(:gsl_multilarge_linear_normal, gsl_multilarge_linear_type) 
    gsl_multilarge_linear_tsqr[] =  @gload_pp(:gsl_multilarge_linear_tsqr, gsl_multilarge_linear_type) 
    gsl_multilarge_nlinear_trust[] =  @gload_pp(:gsl_multilarge_nlinear_trust, gsl_multilarge_nlinear_type) 
    gsl_multilarge_nlinear_trs_lm[] =  @gload_pp(:gsl_multilarge_nlinear_trs_lm, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_trs_lmaccel[] =  @gload_pp(:gsl_multilarge_nlinear_trs_lmaccel, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_trs_dogleg[] =  @gload_pp(:gsl_multilarge_nlinear_trs_dogleg, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_trs_ddogleg[] =  @gload_pp(:gsl_multilarge_nlinear_trs_ddogleg, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_trs_subspace2D[] =  @gload_pp(:gsl_multilarge_nlinear_trs_subspace2D, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_trs_cgst[] =  @gload_pp(:gsl_multilarge_nlinear_trs_cgst, gsl_multilarge_nlinear_trs) 
    gsl_multilarge_nlinear_scale_levenberg[] =  @gload_pp(:gsl_multilarge_nlinear_scale_levenberg, gsl_multilarge_nlinear_scale) 
    gsl_multilarge_nlinear_scale_marquardt[] =  @gload_pp(:gsl_multilarge_nlinear_scale_marquardt, gsl_multilarge_nlinear_scale) 
    gsl_multilarge_nlinear_scale_more[] =  @gload_pp(:gsl_multilarge_nlinear_scale_more, gsl_multilarge_nlinear_scale) 
    gsl_multilarge_nlinear_solver_cholesky[] =  @gload_pp(:gsl_multilarge_nlinear_solver_cholesky, gsl_multilarge_nlinear_solver) 
    gsl_multilarge_nlinear_solver_mcholesky[] =  @gload_pp(:gsl_multilarge_nlinear_solver_mcholesky, gsl_multilarge_nlinear_solver) 
    gsl_multilarge_nlinear_solver_none[] =  @gload_pp(:gsl_multilarge_nlinear_solver_none, gsl_multilarge_nlinear_solver) 
    gsl_multimin_fdfminimizer_steepest_descent[] =  @gload_pp(:gsl_multimin_fdfminimizer_steepest_descent, gsl_multimin_fdfminimizer_type) 
    gsl_multimin_fdfminimizer_conjugate_pr[] =  @gload_pp(:gsl_multimin_fdfminimizer_conjugate_pr, gsl_multimin_fdfminimizer_type) 
    gsl_multimin_fdfminimizer_conjugate_fr[] =  @gload_pp(:gsl_multimin_fdfminimizer_conjugate_fr, gsl_multimin_fdfminimizer_type) 
    gsl_multimin_fdfminimizer_vector_bfgs[] =  @gload_pp(:gsl_multimin_fdfminimizer_vector_bfgs, gsl_multimin_fdfminimizer_type) 
    gsl_multimin_fdfminimizer_vector_bfgs2[] =  @gload_pp(:gsl_multimin_fdfminimizer_vector_bfgs2, gsl_multimin_fdfminimizer_type) 
    gsl_multimin_fminimizer_nmsimplex[] =  @gload_pp(:gsl_multimin_fminimizer_nmsimplex, gsl_multimin_fminimizer_type) 
    gsl_multimin_fminimizer_nmsimplex2[] =  @gload_pp(:gsl_multimin_fminimizer_nmsimplex2, gsl_multimin_fminimizer_type) 
    gsl_multimin_fminimizer_nmsimplex2rand[] =  @gload_pp(:gsl_multimin_fminimizer_nmsimplex2rand, gsl_multimin_fminimizer_type) 
    gsl_multiroot_fsolver_dnewton[] =  @gload_pp(:gsl_multiroot_fsolver_dnewton, gsl_multiroot_fsolver_type) 
    gsl_multiroot_fsolver_broyden[] =  @gload_pp(:gsl_multiroot_fsolver_broyden, gsl_multiroot_fsolver_type) 
    gsl_multiroot_fsolver_hybrid[] =  @gload_pp(:gsl_multiroot_fsolver_hybrid, gsl_multiroot_fsolver_type) 
    gsl_multiroot_fsolver_hybrids[] =  @gload_pp(:gsl_multiroot_fsolver_hybrids, gsl_multiroot_fsolver_type) 
    gsl_multiroot_fdfsolver_newton[] =  @gload_pp(:gsl_multiroot_fdfsolver_newton, gsl_multiroot_fdfsolver_type) 
    gsl_multiroot_fdfsolver_gnewton[] =  @gload_pp(:gsl_multiroot_fdfsolver_gnewton, gsl_multiroot_fdfsolver_type) 
    gsl_multiroot_fdfsolver_hybridj[] =  @gload_pp(:gsl_multiroot_fdfsolver_hybridj, gsl_multiroot_fdfsolver_type) 
    gsl_multiroot_fdfsolver_hybridsj[] =  @gload_pp(:gsl_multiroot_fdfsolver_hybridsj, gsl_multiroot_fdfsolver_type) 
    gsl_odeiv_step_rk2[] =  @gload_pp(:gsl_odeiv_step_rk2, gsl_odeiv_step_type) 
    gsl_odeiv_step_rk4[] =  @gload_pp(:gsl_odeiv_step_rk4, gsl_odeiv_step_type) 
    gsl_odeiv_step_rkf45[] =  @gload_pp(:gsl_odeiv_step_rkf45, gsl_odeiv_step_type) 
    gsl_odeiv_step_rkck[] =  @gload_pp(:gsl_odeiv_step_rkck, gsl_odeiv_step_type) 
    gsl_odeiv_step_rk8pd[] =  @gload_pp(:gsl_odeiv_step_rk8pd, gsl_odeiv_step_type) 
    gsl_odeiv_step_rk2imp[] =  @gload_pp(:gsl_odeiv_step_rk2imp, gsl_odeiv_step_type) 
    gsl_odeiv_step_rk2simp[] =  @gload_pp(:gsl_odeiv_step_rk2simp, gsl_odeiv_step_type) 
    gsl_odeiv_step_rk4imp[] =  @gload_pp(:gsl_odeiv_step_rk4imp, gsl_odeiv_step_type) 
    gsl_odeiv_step_bsimp[] =  @gload_pp(:gsl_odeiv_step_bsimp, gsl_odeiv_step_type) 
    gsl_odeiv_step_gear1[] =  @gload_pp(:gsl_odeiv_step_gear1, gsl_odeiv_step_type) 
    gsl_odeiv_step_gear2[] =  @gload_pp(:gsl_odeiv_step_gear2, gsl_odeiv_step_type) 
    gsl_odeiv2_step_rk2[] =  @gload_pp(:gsl_odeiv2_step_rk2, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rk4[] =  @gload_pp(:gsl_odeiv2_step_rk4, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rkf45[] =  @gload_pp(:gsl_odeiv2_step_rkf45, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rkck[] =  @gload_pp(:gsl_odeiv2_step_rkck, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rk8pd[] =  @gload_pp(:gsl_odeiv2_step_rk8pd, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rk2imp[] =  @gload_pp(:gsl_odeiv2_step_rk2imp, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rk4imp[] =  @gload_pp(:gsl_odeiv2_step_rk4imp, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_bsimp[] =  @gload_pp(:gsl_odeiv2_step_bsimp, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_rk1imp[] =  @gload_pp(:gsl_odeiv2_step_rk1imp, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_msadams[] =  @gload_pp(:gsl_odeiv2_step_msadams, gsl_odeiv2_step_type) 
    gsl_odeiv2_step_msbdf[] =  @gload_pp(:gsl_odeiv2_step_msbdf, gsl_odeiv2_step_type) 
    gsl_qrng_niederreiter_2[] =  @gload_pp(:gsl_qrng_niederreiter_2, gsl_qrng_type) 
    gsl_qrng_sobol[] =  @gload_pp(:gsl_qrng_sobol, gsl_qrng_type) 
    gsl_qrng_halton[] =  @gload_pp(:gsl_qrng_halton, gsl_qrng_type) 
    gsl_qrng_reversehalton[] =  @gload_pp(:gsl_qrng_reversehalton, gsl_qrng_type) 
    gsl_rng_borosh13[] =  @gload_pp(:gsl_rng_borosh13, gsl_rng_type) 
    gsl_rng_coveyou[] =  @gload_pp(:gsl_rng_coveyou, gsl_rng_type) 
    gsl_rng_cmrg[] =  @gload_pp(:gsl_rng_cmrg, gsl_rng_type) 
    gsl_rng_fishman18[] =  @gload_pp(:gsl_rng_fishman18, gsl_rng_type) 
    gsl_rng_fishman20[] =  @gload_pp(:gsl_rng_fishman20, gsl_rng_type) 
    gsl_rng_fishman2x[] =  @gload_pp(:gsl_rng_fishman2x, gsl_rng_type) 
    gsl_rng_gfsr4[] =  @gload_pp(:gsl_rng_gfsr4, gsl_rng_type) 
    gsl_rng_knuthran[] =  @gload_pp(:gsl_rng_knuthran, gsl_rng_type) 
    gsl_rng_knuthran2[] =  @gload_pp(:gsl_rng_knuthran2, gsl_rng_type) 
    gsl_rng_knuthran2002[] =  @gload_pp(:gsl_rng_knuthran2002, gsl_rng_type) 
    gsl_rng_lecuyer21[] =  @gload_pp(:gsl_rng_lecuyer21, gsl_rng_type) 
    gsl_rng_minstd[] =  @gload_pp(:gsl_rng_minstd, gsl_rng_type) 
    gsl_rng_mrg[] =  @gload_pp(:gsl_rng_mrg, gsl_rng_type) 
    gsl_rng_mt19937[] =  @gload_pp(:gsl_rng_mt19937, gsl_rng_type) 
    gsl_rng_mt19937_1999[] =  @gload_pp(:gsl_rng_mt19937_1999, gsl_rng_type) 
    gsl_rng_mt19937_1998[] =  @gload_pp(:gsl_rng_mt19937_1998, gsl_rng_type) 
    gsl_rng_r250[] =  @gload_pp(:gsl_rng_r250, gsl_rng_type) 
    gsl_rng_ran0[] =  @gload_pp(:gsl_rng_ran0, gsl_rng_type) 
    gsl_rng_ran1[] =  @gload_pp(:gsl_rng_ran1, gsl_rng_type) 
    gsl_rng_ran2[] =  @gload_pp(:gsl_rng_ran2, gsl_rng_type) 
    gsl_rng_ran3[] =  @gload_pp(:gsl_rng_ran3, gsl_rng_type) 
    gsl_rng_rand[] =  @gload_pp(:gsl_rng_rand, gsl_rng_type) 
    gsl_rng_rand48[] =  @gload_pp(:gsl_rng_rand48, gsl_rng_type) 
    gsl_rng_random128_bsd[] =  @gload_pp(:gsl_rng_random128_bsd, gsl_rng_type) 
    gsl_rng_random128_glibc2[] =  @gload_pp(:gsl_rng_random128_glibc2, gsl_rng_type) 
    gsl_rng_random128_libc5[] =  @gload_pp(:gsl_rng_random128_libc5, gsl_rng_type) 
    gsl_rng_random256_bsd[] =  @gload_pp(:gsl_rng_random256_bsd, gsl_rng_type) 
    gsl_rng_random256_glibc2[] =  @gload_pp(:gsl_rng_random256_glibc2, gsl_rng_type) 
    gsl_rng_random256_libc5[] =  @gload_pp(:gsl_rng_random256_libc5, gsl_rng_type) 
    gsl_rng_random32_bsd[] =  @gload_pp(:gsl_rng_random32_bsd, gsl_rng_type) 
    gsl_rng_random32_glibc2[] =  @gload_pp(:gsl_rng_random32_glibc2, gsl_rng_type) 
    gsl_rng_random32_libc5[] =  @gload_pp(:gsl_rng_random32_libc5, gsl_rng_type) 
    gsl_rng_random64_bsd[] =  @gload_pp(:gsl_rng_random64_bsd, gsl_rng_type) 
    gsl_rng_random64_glibc2[] =  @gload_pp(:gsl_rng_random64_glibc2, gsl_rng_type) 
    gsl_rng_random64_libc5[] =  @gload_pp(:gsl_rng_random64_libc5, gsl_rng_type) 
    gsl_rng_random8_bsd[] =  @gload_pp(:gsl_rng_random8_bsd, gsl_rng_type) 
    gsl_rng_random8_glibc2[] =  @gload_pp(:gsl_rng_random8_glibc2, gsl_rng_type) 
    gsl_rng_random8_libc5[] =  @gload_pp(:gsl_rng_random8_libc5, gsl_rng_type) 
    gsl_rng_random_bsd[] =  @gload_pp(:gsl_rng_random_bsd, gsl_rng_type) 
    gsl_rng_random_glibc2[] =  @gload_pp(:gsl_rng_random_glibc2, gsl_rng_type) 
    gsl_rng_random_libc5[] =  @gload_pp(:gsl_rng_random_libc5, gsl_rng_type) 
    gsl_rng_randu[] =  @gload_pp(:gsl_rng_randu, gsl_rng_type) 
    gsl_rng_ranf[] =  @gload_pp(:gsl_rng_ranf, gsl_rng_type) 
    gsl_rng_ranlux[] =  @gload_pp(:gsl_rng_ranlux, gsl_rng_type) 
    gsl_rng_ranlux389[] =  @gload_pp(:gsl_rng_ranlux389, gsl_rng_type) 
    gsl_rng_ranlxd1[] =  @gload_pp(:gsl_rng_ranlxd1, gsl_rng_type) 
    gsl_rng_ranlxd2[] =  @gload_pp(:gsl_rng_ranlxd2, gsl_rng_type) 
    gsl_rng_ranlxs0[] =  @gload_pp(:gsl_rng_ranlxs0, gsl_rng_type) 
    gsl_rng_ranlxs1[] =  @gload_pp(:gsl_rng_ranlxs1, gsl_rng_type) 
    gsl_rng_ranlxs2[] =  @gload_pp(:gsl_rng_ranlxs2, gsl_rng_type) 
    gsl_rng_ranmar[] =  @gload_pp(:gsl_rng_ranmar, gsl_rng_type) 
    gsl_rng_slatec[] =  @gload_pp(:gsl_rng_slatec, gsl_rng_type) 
    gsl_rng_taus[] =  @gload_pp(:gsl_rng_taus, gsl_rng_type) 
    gsl_rng_taus2[] =  @gload_pp(:gsl_rng_taus2, gsl_rng_type) 
    gsl_rng_taus113[] =  @gload_pp(:gsl_rng_taus113, gsl_rng_type) 
    gsl_rng_transputer[] =  @gload_pp(:gsl_rng_transputer, gsl_rng_type) 
    gsl_rng_tt800[] =  @gload_pp(:gsl_rng_tt800, gsl_rng_type) 
    gsl_rng_uni[] =  @gload_pp(:gsl_rng_uni, gsl_rng_type) 
    gsl_rng_uni32[] =  @gload_pp(:gsl_rng_uni32, gsl_rng_type) 
    gsl_rng_vax[] =  @gload_pp(:gsl_rng_vax, gsl_rng_type) 
    gsl_rng_waterman14[] =  @gload_pp(:gsl_rng_waterman14, gsl_rng_type) 
    gsl_rng_zuf[] =  @gload_pp(:gsl_rng_zuf, gsl_rng_type) 
    gsl_rng_default[] =  @gload_pp(:gsl_rng_default, gsl_rng_type) 
    gsl_root_fsolver_bisection[] =  @gload_pp(:gsl_root_fsolver_bisection, gsl_root_fsolver_type) 
    gsl_root_fsolver_brent[] =  @gload_pp(:gsl_root_fsolver_brent, gsl_root_fsolver_type) 
    gsl_root_fsolver_falsepos[] =  @gload_pp(:gsl_root_fsolver_falsepos, gsl_root_fsolver_type) 
    gsl_root_fdfsolver_newton[] =  @gload_pp(:gsl_root_fdfsolver_newton, gsl_root_fdfsolver_type) 
    gsl_root_fdfsolver_secant[] =  @gload_pp(:gsl_root_fdfsolver_secant, gsl_root_fdfsolver_type) 
    gsl_root_fdfsolver_steffenson[] =  @gload_pp(:gsl_root_fdfsolver_steffenson, gsl_root_fdfsolver_type) 
    gsl_version[] =  @gload_pp(:gsl_version, Cchar) 
    gsl_wavelet_daubechies[] =  @gload_pp(:gsl_wavelet_daubechies, gsl_wavelet_type) 
    gsl_wavelet_daubechies_centered[] =  @gload_pp(:gsl_wavelet_daubechies_centered, gsl_wavelet_type) 
    gsl_wavelet_haar[] =  @gload_pp(:gsl_wavelet_haar, gsl_wavelet_type) 
    gsl_wavelet_haar_centered[] =  @gload_pp(:gsl_wavelet_haar_centered, gsl_wavelet_type) 
    gsl_wavelet_bspline[] =  @gload_pp(:gsl_wavelet_bspline, gsl_wavelet_type) 
    gsl_wavelet_bspline_centered[] =  @gload_pp(:gsl_wavelet_bspline_centered, gsl_wavelet_type) 
end
