# Build script by MosÃ¨ Giordano
# https://github.com/giordano/GSLBuilder.jl

using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    # work around for https://github.com/JuliaPackaging/BinaryProvider.jl/issues/133
    LibraryProduct(prefix, [Sys.iswindows() ? "libgsl" : "libgsl."], :libgsl),
    LibraryProduct(prefix, [Sys.iswindows() ? "libgslcblas" : "libgslcblas."], :libgslcblas),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/GSL_jll.jl/releases/download/GSL-v2.6.0+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/GSL.v2.6.0.aarch64-linux-gnu.tar.gz", "07bf1a0f50692421e99f6325843b6beb2e02d12659cb4a316bd15cd414b03f46"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/GSL.v2.6.0.aarch64-linux-musl.tar.gz", "97619f82228e966f62881ab51ba83b52502df2cc57d94b78d3dac8c450cbd35c"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/GSL.v2.6.0.arm-linux-gnueabihf.tar.gz", "6af7eb831a58e9422fadffe90d5590d4c3e946dc4ff69a2421ac87fff8467f4d"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/GSL.v2.6.0.arm-linux-musleabihf.tar.gz", "d8e149d1d9c784186349cbfcf60eab854c99dbee35506a2b569bd12b0a01b8c6"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/GSL.v2.6.0.i686-linux-gnu.tar.gz", "c56cdad16df1bf1e22c21a92ec30b88b06178eb7832f340eec5d1d5e3d1ed17a"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/GSL.v2.6.0.i686-linux-musl.tar.gz", "a6cbf55b8009a5f42f044adfe926f16f6ab8557ce3ba302467f3a059b1d7374c"),
    Windows(:i686) => ("$bin_prefix/GSL.v2.6.0.i686-w64-mingw32.tar.gz", "5f6d1c8e04897e06d156a867caae2d630948128dca9122f3f46e96fcc7e70a8a"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/GSL.v2.6.0.powerpc64le-linux-gnu.tar.gz", "457f4363377c73406964e5afb98db9bb6e66a1e2273babfe95df76d43d2e0550"),
    MacOS(:x86_64) => ("$bin_prefix/GSL.v2.6.0.x86_64-apple-darwin14.tar.gz", "249506bd5780fec01ce8c86a7642b762092733a0524766241acb8743439b93b2"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/GSL.v2.6.0.x86_64-linux-gnu.tar.gz", "a63a7ba98fa623bf304a13d03a217358ddc339326ebccb9656af3f505a3e5a87"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/GSL.v2.6.0.x86_64-linux-musl.tar.gz", "3a2e4fea75f1c9891c0fff37b5b960dcbb79be9f1eebcbcb6e28c5242496d1e1"),
    FreeBSD(:x86_64) => ("$bin_prefix/GSL.v2.6.0.x86_64-unknown-freebsd11.1.tar.gz", "141f3cd1be872837bcd2f1cf787015af756f3b2b160bea96a5bf11437c3d7252"),
    Windows(:x86_64) => ("$bin_prefix/GSL.v2.6.0.x86_64-w64-mingw32.tar.gz", "362e54af69f27311592b7b8d5f3e9c1231f8432fea8b802a658467d908dc5d39"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
